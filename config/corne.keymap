/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>

#define U_MOUSE_MOVE_MAX 1400                     /* <--- New max speed setting (default: 600) */
#undef MOVE_UP
#undef MOVE_DOWN
#undef MOVE_LEFT
#undef MOVE_RIGHT
#define MOVE_UP MOVE_VERT(-U_MOUSE_MOVE_MAX)
#define MOVE_DOWN MOVE_VERT(U_MOUSE_MOVE_MAX)
#define MOVE_LEFT MOVE_HOR(-U_MOUSE_MOVE_MAX)
#define MOVE_RIGHT MOVE_HOR(U_MOUSE_MOVE_MAX)

&mmv {
	time-to-max-speed-ms = <400>;             /* <--- How long time until max speed is reached (default: 500) */
};

#define U_MOUSE_SCROLL_MAX 100                    /* <--- New max speed setting (default: 10) */

#undef SCROLL_UP
#undef SCROLL_DOWN
#undef SCROLL_LEFT
#undef SCROLL_RIGHT
#define SCROLL_UP SCROLL_VERT(U_MOUSE_SCROLL_MAX)
#define SCROLL_DOWN SCROLL_VERT(-U_MOUSE_SCROLL_MAX)
#define SCROLL_LEFT SCROLL_HOR(-U_MOUSE_SCROLL_MAX)
#define SCROLL_RIGHT SCROLL_HOR(U_MOUSE_SCROLL_MAX)

&mwh {
  time-to-max-speed-ms = <500>;                 /* <--- How long time until max speed is reached */
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |NP-TAB|  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | SHFT |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | CTRL |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | ENT |   | SPC | RSE  | ALT |
                        bindings = <
   &lt 4 TAB &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp LSHFT &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LCTRL &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp ESC
                   &kp LALT &mo 1 &kp RET    &kp SPACE &mo 2 &kp LGUI
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  `   |  ^  | "|" |  <  |  >  |  /  |   |  -  |  {  |  }  |  &  |  $  | BKSP |
// | SHFT |  #  |  :  |  [  |  ]  |  *  |   |  +  |  (  |  )  |  =  |  ;  | DLTE |
// | CTRL |  @  |  \  |  ,  |  '  |  !  |   |  ?  |  "  |  .  |  _  |  %  | INS  |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp GRAVE  &kp CARET  &kp PIPE   &kp LT    &kp GT   &kp FSLH          &kp MINUS  &kp LBRC  &kp RBRC   &kp AMPS   &kp DLLR      &kp BSPC
   &kp LSHFT  &kp HASH   &kp COLON  &kp LBKT  &kp RBKT &kp STAR          &kp PLUS   &kp LPAR  &kp RPAR   &kp EQUAL  &kp SEMI      &kp DEL
   &kp LCTRL  &kp AT     &kp BSLH   &kp COMMA &kp SQT  &kp EXCL          &kp QMARK  &kp DQT   &kp DOT    &kp UNDER  &kp PRCNT     &kp INS
                                    &kp LGUI  &trans   &kp SPACE         &kp RET    &mo 3     &kp RALT
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |ALTTAB|     | UP   |     | PGUP | HOME |   | MWUP | MB4 | MUP | MB2 | BUP  |  BKSP  |
// | SHFT | LFT | DWN  | RGHT| PGDN | END  |   | MBT1 | MLT | MDN | MRT | MB3  | BTNEXT |
// | MUTE | PRV | PP   | NEXT| VUP  | VDWN |   | MWDN | MB5 | MWL | MWR | BDWN | BTPREV |
//                     | GUI |      | SPC  |   | BTCLR|     |  0  |
                        bindings = <
   &kp LA(TAB) &trans     &kp UP     &trans       &kp PG_UP    &kp HOME                  &mwh SCROLL_UP   &mkp MB4       &mmv MOVE_UP     &mkp MB2          &kp C_BRI_UP  &kp BSPC
   &kp LSHFT   &kp LEFT   &kp DOWN   &kp RIGHT    &kp PG_DN    &kp END                   &mkp MB1         &mmv MOVE_LEFT &mmv MOVE_DOWN   &mmv MOVE_RIGHT   &kp MB3       &bt BT_NXT
   &kp C_MUTE  &kp C_PREV &kp C_PP   &kp C_NEXT   &kp C_VOL_UP &kp C_VOL_DN              &mwh SCROLL_DOWN &mkp MB5       &mwh SCROLL_LEFT &mwh SCROLL_RIGHT &kp C_BRI_DN  &bt BT_PRV
                                     &kp LGUI     &mo 3        &kp RET                   &bt BT_CLR &trans &kp NUMBER_0
                        >;
                };
                
                function_layer {
// -----------------------------------------------------------------------------------------
// | F1 | F2 | F3 | F4 | F5 | F6 |   | F7 | F8 | F9 | F10 | F11 | F12 | 
// | SHFT | LFT | DWN  | RGHT| PGDN | END  |   |  +  |  4  |  5  |  6  | BDWN | BTPREV |
// | PREV | PP  | NEXT | VUP | MUTE | VDWN |   |  -  |  1  |  2  |  3  | SCRN |        |
//                     | GUI |      | SPC  |   | ENT |     |  0  |
                        bindings = <
   &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6    &kp F7 &kp F8 &kp F9 &kp F10 &kp F11       &kp F12
   &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6    &kp F7 &kp F8 &kp F9 &kp F10 &kp LG(PSCRN) &kp F12
   &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6    &kp F7 &kp F8 &kp F9 &kp F10 &kp F11       &kp F12
                        &kp F1 &kp F2 &kp F3    &kp F4 &kp F5 &kp F6
                        >;
                };
                num_pad_layer {
// -----------------------------------------------------------------------------------------
// | trans | trans | trans | trans | trans | trans |    |  ^  |  7  |  8  |  9  | none | trans | 
// | trans | trans | trans | trans | trans | trans |    |  +  |  4  |  5  |  6  | none | DLTE  |
// | trans | trans | trans | trans | trans | trans |    |  -  |  1  |  2  |  3  | none | trans |
//                         | GUI   |       | ENT   |    | SPC |     |  0  |
                        bindings = <
   &trans &trans &trans &trans &trans &trans    &kp CARET  &kp N7 &kp N8 &kp N9 &none  &kp BSPC
   &trans &trans &trans &trans &trans &trans    &kp PLUS   &kp N4 &kp N5 &kp N6 &none  &kp DEL
   &trans &trans &trans &trans &trans &trans    &kp MINUS  &kp N1 &kp N2 &kp N3 &none  &trans
                        &trans &trans &trans    &trans &trans &kp NUMBER_0
                        >;
                };
        };

};
